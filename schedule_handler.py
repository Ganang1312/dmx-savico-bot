import os
from datetime import datetime
import pytz
from linebot import LineBotApi
from linebot.models import FlexSendMessage, TextSendMessage

# S·ª¨A L·ªñI: Import th√™m WORKSHEET_SCHEDULES_NAME t·ª´ config
from config import CLIENT, SHEET_NAME, WORKSHEET_SCHEDULES_NAME

# Kh·ªüi t·∫°o LineBotApi
CHANNEL_ACCESS_TOKEN = os.environ.get('CHANNEL_ACCESS_TOKEN')
if not CHANNEL_ACCESS_TOKEN:
    raise ValueError("L·ªói: Bi·∫øn m√¥i tr∆∞·ªùng CHANNEL_ACCESS_TOKEN kh√¥ng ƒë∆∞·ª£c thi·∫øt l·∫≠p.")
line_bot_api = LineBotApi(CHANNEL_ACCESS_TOKEN)

def get_vietnamese_day_of_week():
    """L·∫•y t√™n ng√†y trong tu·∫ßn b·∫±ng ti·∫øng Vi·ªát."""
    tz_vietnam = pytz.timezone('Asia/Ho_Chi_Minh')
    weekday = datetime.now(tz_vietnam).weekday()
    days = ["Th·ª© Hai", "Th·ª© Ba", "Th·ª© T∆∞", "Th·ª© NƒÉm", "Th·ª© S√°u", "Th·ª© B·∫£y", "Ch·ªß Nh·∫≠t"]
    return days[weekday]

def create_schedule_flex_message(schedule_type, schedule_text):
    """T·∫°o tin nh·∫Øn Flex Message cho l·ªãch l√†m vi·ªác."""
    if schedule_type == 'pg':
        title = "üìÖ L·ªäCH L√ÄM VI·ªÜC PG H√îM NAY"
        header_color = "#FF6B6B" # M√†u h·ªìng
    else: # employee
        title = "üìÖ L·ªäCH L√ÄM VI·ªÜC NH√ÇN VI√äN"
        header_color = "#4D96FF" # M√†u xanh d∆∞∆°ng

    # X·ª≠ l√Ω xu·ªëng d√≤ng trong text, h·ªó tr·ª£ c·∫£ <br> v√† \n
    schedule_lines = schedule_text.replace('<br>', '\n').split('\n')
    text_components = []
    for line in schedule_lines:
        if line.strip(): # B·ªè qua c√°c d√≤ng tr·ªëng
            text_components.append({"type": "text", "text": line, "wrap": True, "size": "md"})

    flex_content = {
      "type": "bubble",
      "header": {
        "type": "box",
        "layout": "vertical",
        "contents": [
          {
            "type": "text",
            "text": title,
            "color": "#FFFFFF",
            "weight": "bold",
            "size": "lg",
            "align": "center"
          }
        ],
        "backgroundColor": header_color
      },
      "body": {
        "type": "box",
        "layout": "vertical",
        "spacing": "md",
        "contents": text_components
      }
    }
    return flex_content

def send_daily_schedule(schedule_type):
    """H√†m ch√≠nh ƒë·ªÉ t√¨m v√† g·ª≠i l·ªãch l√†m vi·ªác h√†ng ng√†y."""
    print(f"B·∫Øt ƒë·∫ßu g·ª≠i l·ªãch l√†m vi·ªác cho nh√≥m: {schedule_type}")
    
    # 1. X√°c ƒë·ªãnh Group ID v√† c·ªôt c·∫ßn ƒë·ªçc t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    if schedule_type == 'pg':
        target_group_id = os.environ.get('PG_GROUP_ID')
        column_to_read = 'pg_schedule'
    elif schedule_type == 'employee':
        target_group_id = os.environ.get('EMPLOYEE_GROUP_ID')
        column_to_read = 'employee_schedule'
    else:
        print(f"L·ªói: Lo·∫°i l·ªãch '{schedule_type}' kh√¥ng h·ª£p l·ªá.")
        return

    if not target_group_id:
        print(f"C·∫¢NH B√ÅO: B·ªè qua g·ª≠i l·ªãch v√¨ bi·∫øn m√¥i tr∆∞·ªùng cho '{schedule_type}' ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p.")
        return

    try:
        # 2. L·∫•y l·ªãch l√†m vi·ªác t·ª´ Google Sheet
        sheet = CLIENT.open(SHEET_NAME).worksheet(WORKSHEET_SCHEDULES_NAME)
        all_schedules = sheet.get_all_records()
        today_str = get_vietnamese_day_of_week()
        
        schedule_text_today = None
        for row in all_schedules:
            if row.get('day_of_week') == today_str:
                schedule_text_today = row.get(column_to_read)
                break
        
        # 3. G·ª≠i tin nh·∫Øn
        if schedule_text_today:
            print(f"T√¨m th·∫•y l·ªãch cho {today_str}: {schedule_text_today}")
            flex_message_content = create_schedule_flex_message(schedule_type, schedule_text_today)
            message = FlexSendMessage(
                alt_text=f"L·ªãch l√†m vi·ªác h√¥m nay cho {schedule_type}",
                contents=flex_message_content
            )
            line_bot_api.push_message(target_group_id, message)
            print(f"G·ª≠i l·ªãch th√†nh c√¥ng ƒë·∫øn group ID: {target_group_id}")
        else:
            print(f"Kh√¥ng t√¨m th·∫•y l·ªãch l√†m vi·ªác cho {today_str} trong sheet.")
            # G·ª≠i tin nh·∫Øn th√¥ng b√°o n·∫øu mu·ªën
            # line_bot_api.push_message(target_group_id, TextSendMessage(text=f"Kh√¥ng t√¨m th·∫•y l·ªãch l√†m vi·ªác cho h√¥m nay ({today_str})."))

    except Exception as e:
        print(f"L·ªói nghi√™m tr·ªçng khi g·ª≠i l·ªãch l√†m vi·ªác: {e}")

